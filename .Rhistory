medsol <- aggregate(ant$ug.g~ant$Amostra+ant$Replica+ant$Solvente+ant$Local,FUN = mean)
colnames(medsol) <- c("amostra","replica","solvente","Local" ,"mg.g")
meds <- medsol$ug.g
library(tidyverse)
## EXTRATO VS SOLVENTE
par(cex.axis=1,cex.lab=1.2,las=1,bty= "l", tcl=-0.2,cex=1.3,mar=c(5,6,4,2), pch=16, family="serif")
bargraph.CI(medsol$replica,medsol$mg.g, medsol$solvente,ylab="",
lc=F,xlab="",xaxt="n", ylim=c(0,2500),err.width = 0.05)
axis(side=1, at=c(2,5,8,11), labels=c("","","",""))
mtext(c("0,6","1,2","2,5","5"),at=c(2,5,8,11),side=1,line=0.5,cex=1.2)
mtext("Concentracao \n ug.g (EAG)", side=2, line=3.4,las=0, cex=1.2)
mtext("Concentracao \n extrato", side=1, line=2.4,las=0, cex=1.2)
legend(0.5,2500,legend=c("Diclorometano","Metanol"), col=c("grey40","grey90"), pch=16,cex=1,bty = "n")
met <- aov(metanol$ug.g~metanol$Replica*metanol$Grupo)
summary(met)
shapiro.test(met$residuals)
TukeyHSD(met)
dic <- aov(dicloro$ug.g~dicloro$Replica*dicloro$Grupo)
summary(dic)
TukeyHSD(dic)
shapiro.test(dic$residuals)
hist(dic$residuals)
sol= aov(ant$ug.g~ant$Solvente*ant$Grupo)
summary(sol)
shapiro.test(sol$residuals)
hist(sol$residuals)
dpph <- read_excel("AntioxSay.xlsx", sheet = "DPPH-Estat")
str(dpph)
diclo <- subset(dpph, subset=dpph$Solvente=="Diclorometano", select = c("Amostra","Grupo","Replica","AOX"))
meta <- subset(dpph, subset=dpph$Solvente=="Metanol", select = c("Amostra","Grupo","Replica","AOX"))
aggregate(meta$AOX~meta$Amostra+meta$Replica, FUN=mean)
aggregate(diclo$AOX~diclo$Amostra, FUN=mean)
medsol <- aggregate(dpph$AOX~dpph$Amostra+dpph$Replica+dpph$Solvente+dpph$Grupo,FUN = mean)
colnames(medsol) <- c("amostra","replica","solvente","grupo", "AOX")
## EXTRATO VS SOLVENTE -> DPPH
png(filename = "DPPH_SOLVENTES%001d.PNG",width = 2400,height = 1200,pointsize = 36)
par(cex.axis=1.4,cex.lab=1.4,las=1,bty= "l", tcl=-0.2,cex=1.6,mar=c(5,6,4,2), pch=16, family="serif")
bargraph.CI(medsol$replica,medsol$AOX, medsol$solvente,ylab="",
lc=F,xlab="",xaxt="n", ylim=c(0,50),err.width = 0.05)
axis(side=1, at=c(2,5,8,11), labels=c("","","",""))
mtext(c("0,6","1,2","2,5","5"),at=c(2,5,8,11),side=1,line=0.5,cex=1.3)
mtext("% AA \n DPPH", side=2, line=3.4,las=0, cex=1.3)
mtext("Concentracoes das amostras", side=1, line=2.4,las=0, cex=1.8, family = "serif")
legend(0.5,50,legend=c("diclorometano","metanol"), col=c("grey40","grey90"), pch=16,cex=1.3,bty = "n")
abline(h=0)
dev.off()
anv3 = aov(medsol$AOX~medsol$solvente*medsol$replica)
summary(anv3)
hist(anv3$residuals)
shapiro.test(anv3$residuals)
## DPPH POR GRUPOS
png(filename = "DPPH_grupos%001d.PNG",width = 2400,height = 1200,pointsize = 32)
par(mfrow=c(1,2),cex.axis=1,cex.lab=1.2,las=1,bty= "l", tcl=-0.2,cex=1.2,mar=c(5,6,4,2), pch=16, family="serif")
bargraph.CI(diclo$Grupo,diclo$AOX, diclo$Replica,ylab="",
lc=F,xlab="",xaxt="n", ylim=c(0,100),err.width = 0.05)
axis(side=1, at=c(3,8,13), labels=c("","",""))
mtext(c("Chlo","Phae","Rho"),at=c(3,8,13),side=1,line=1.6,cex=1.4, las=1)
mtext("% AA DPPH", side=2, line=3,las=0, cex=1.2)
mtext("Diclorometano", side=1, line=2.8,las=0, cex=1.5)
mtext(c(0.6,1.2,2.5,5),at=c(1.5,2.5,3.5,4.5,6.5,7.5,8.5,9.5,11.5,12.5,13.5,14.5),side=1,line=0,cex=1, las=1)
text(x = c(3,8,13), y = 95, labels = c("A", "B", "B"))
anv1 = aov(diclo$AOX~diclo$Replica*diclo$Grupo)
summary(anv1)
TukeyHSD(anv1)
bargraph.CI(meta$Grupo,meta$AOX, meta$Replica,ylab="",
lc=F,xlab="",xaxt="n", ylim=c(0,100),err.width = 0.05)
axis(side=1, at=c(3,8,13), labels=c("","",""))
mtext(c("Chlo","Phae","Rho"),at=c(3,8,13),side=1,line=1.6,cex=1.4, las=1)
mtext("% AA DPPH", side=2, line=3,las=0, cex=1.2)
mtext("Metanol", side=1, line=2.8,las=0, cex=1.5)
mtext(c(0.6,1.2,2.5,5),at=c(1.5,2.5,3.5,4.5,6.5,7.5,8.5,9.5,11.5,12.5,13.5,14.5),side=1,line=0,cex=1, las=1)
text(x = c(3,8,13), y = 95, labels = c("A", "A", "A"))
dev.off()
anv2 = aov(meta$AOX~meta$Replica*meta$Grupo)
summary(anv2)
shapiro.test(anv2$residuals)
hist(anv2$residuals)
TukeyHSD(anv2)
###AOX FOLIN
png(filename = "DPPH_FOLIN%001d.PNG",width = 2400,height = 1200,pointsize = 32)
par(mfrow=c(1,2),cex.axis=1,cex.lab=1.2,las=1,bty= "l", tcl=-0.2,cex=1.2,mar=c(5,6,4,2), pch=16, family="serif")
bargraph.CI(metanol$Amostra,metanol$AOX,metanol$Replica,las=0,ylab="",
lc=F,xlab="",xaxt="n", ylim=c(0,50), err.width = 0.05)
axis(side=1, at=c(3,8,13,18,23,28), labels=c("","","","","",""))
mtext(c("Can","Cha","Cla","Dde","Pal","Sar"),at=c(3,8,13,18,23,28),side=1,line=0.6,cex=1.4, las=2)
mtext("%AA Fenolicos", side=2, line=3,las=0, cex=1.2)
mtext("Metanol", side=1, line=2.8,las=0, cex=1.5)
legend(1 ,50,legend=c("0.6","1.2","2.5","5"), col=c("grey30","grey50","grey70","grey90"), pch=16,cex=1,bty = "n")
bargraph.CI(dicloro$Amostra,dicloro$AOX,dicloro$Replica,ylab="",
lc=F,xlab="",xaxt="n", ylim=c(0,100), err.width = 0.05)
axis(side=1, at=c(3,8,13,18,23,28), labels=c("","","","","",""))
mtext(c("Can","Cha","Cla","Pal","Sar"),at=c(3,8,13,18,23),side=1,line=0.6,cex=1.4, las=2)
mtext("%AA Fenolicos", side=2, line=3,las=0, cex=1.2)
mtext("Diclorometano", side=1, line=2.8,las=0, cex=1.5)
legend(1 ,100,legend=c("0.6","1.2","2.5","5"), col=c("grey30","grey50","grey70","grey90"), pch=16,cex=1,bty = "n")
dev.off()
### AA - Folin
bargraph.CI(ant$Grupo,ant$AOX, ant$Replica,ylab="",
lc=F,xlab="",xaxt="n", ylim=c(0,100),err.width = 0.05)
axis(side=1, at=c(3,8,13), labels=c("","",""))
mtext(c("Chlo","Phae","Rho"),at=c(3,8,13),side=1,line=1.6,cex=1.4, las=1)
mtext("%AA Fenolicos", side=2, line=3,las=0, cex=1.2)
#legend(13 ,100,legend=c("0.6","1.2","2.5","5"), col=c("grey30","grey50","grey70","grey90"), pch=16,cex=1,bty = "n")
mtext(c(0.6,1.2,2.5,5),at=c(1.5,2.5,3.5,4.5,6.5,7.5,8.5,9.5,11.5,12.5,13.5,14.5),side=1,line=0,cex=1, las=1)
text(x = c(3,8,13), y = 95, labels = c("A", "B", "B"))
bargraph.CI(dpph$Grupo,dpph$AOX, dpph$Replica,ylab="",
lc=F,xlab="",xaxt="n", ylim=c(0,100),err.width = 0.05)
axis(side=1, at=c(3,8,13), labels=c("","",""))
mtext(c("Chlo","Phae","Rho"),at=c(3,8,13),side=1,line=1.6,cex=1.4, las=1)
mtext("% AA DPPH", side=2, line=3,las=0, cex=1.2)
#legend(1 ,100,legend=c("0.6","1.2","2.5","5"), col=c("grey30","grey50","grey70","grey90"), pch=16,cex=1,bty = "n")
mtext(c(0.6,1.2,2.5,5),at=c(1.5,2.5,3.5,4.5,6.5,7.5,8.5,9.5,11.5,12.5,13.5,14.5),side=1,line=0,cex=1, las=1)
text(x = c(3,8,13), y = 95, labels = c("A", "B", "B"))
dev.off()
anv4=aov(ant$AOX~ant$Grupo*ant$Replica)
summary(anv4)
shapiro.test(anv4$residuals)
hist(anv4$residuals)
TukeyHSD(anv4)
anv5=aov(dpph$AOX~dpph$Replica*dpph$Grupo)
summary(anv5)
shapiro.test(anv5$residuals)
hist(anv5$residuals)
TukeyHSD(anv5)
#mtext("Metanol", side=1, line=2.8,las=0, cex=1.5)
png(filename = "fenólico_SOLVENTES%001d.PNG",width = 2400,height = 1200,pointsize = 32)
par(mfrow=c(1,1),cex.axis=1,cex.lab=1.2,las=1,bty= "l", tcl=-0.2,cex=1.2,mar=c(5,6,4,2), pch=16, family="serif")
bargraph.CI(medsol$replica,medsol$AOX ,medsol$solvente,ylab="",lc=F,xlab="",xaxt="n", ylim=c(0,50),err.width = 0.05)
#locator(4)
axis(side=1, at=c(2,5,8,11), labels=c("","","",""))
mtext(c("0,6","1,2","2,5","5"),at=c(2,5,8,11),side=1,line=0.5,cex=1.3)
mtext("% AA \n Fenólicos", side=2, line=3.4,las=0, cex=1.3)
mtext("Concentracoes das amostras", side=1, line=2.4,las=0, cex=1.8, family = "serif")
legend(0.5,50,legend=c("diclorometano","metanol"), col=c("grey40","grey90"), pch=16,cex=1.3,bty = "n")
abline(h=0)
dev.off()
anv6 = aov(medsol$AOX~medsol$replica*medsol$solvente)
summary(anv6)
shapiro.test(anv6$residuals)
hist(anv6$residuals)
TukeyHSD(anv6)
##Carotenoides
car <- read_excel("AntioxSay.xlsx", sheet = 4)
head(car)
png(filename = "Pigmentos%001d.PNG",width = 2400,height = 1200,pointsize = 32)
par(mfrow=c(1,1),cex.axis=1,cex.lab=1.2,las=1,bty= "l", tcl=-0.2,cex=1.2,mar=c(5,6,4,2), pch=16, family="serif")
bargraph.CI(car$Grupo,car$`Chl a`,car$Pigmentos,lc=F,ylab="",xlab="",xaxt="n", ylim=c(0,15),err.width = 0.05)
axis(side=1, at=c(2,5,8), labels=c("","",""))
mtext(c("Chlorophyta","Phaeophyceae","Rhodophyta"),at=c(2,5,8),side=1,line=0.5,cex=1.3)
mtext("ug.g \n Pigmentos", side=2, line=3.4,las=0, cex=1.3)
#mtext("Concentracoes das amostras", side=1, line=2.4,las=0, cex=1.8, family = "serif")
legend(7,13,legend=c("Carotenoides","Clorofila"), col=c("grey40","grey90"), pch=16,cex=1.3,bty = "n")
text(x = c(2,5,8), y = 8, labels = c("A", "B", "C"))
text(x = c(1.5,2.5,4.5,5.5,7.5,8.5), y = c(3.5,7,2.5,6.5,1,1.5), labels = c("a", "b", "a", "b", "a", "b"))
abline(h=0)
par(mfrow=c(1,1),cex.axis=1,cex.lab=1.2,las=1,bty= "l", tcl=-0.2,cex=1.2,mar=c(5,6,4,2), pch=16, family="serif")
lineplot.CI(car$Grupo,car$`Chl a`,car$Pigmentos, type="p", ylab = "",xlab="",xaxt="n", ylim=c(0,10),err.width = 0.05)
axis(side=1, at=c(1,2,3), labels=c("","",""))
mtext(c("Chlorophyta","Phaeophyceae","Rhodophyta"),at=c(1,2,3),side=1,line=0.5,cex=1.3)
mtext("ug.g \n Pigmentos", side=2, line=3.4,las=0, cex=1.3)
#mtext("Concentracoes das amostras", side=1, line=2.4,las=0, cex=1.8, family = "serif")
#legend(7,7,legend=c("Carotenoides","Clorofila"), col=c("grey40","grey90"), pch=16,cex=1.3,bty = "n")
#text(x = c(2,5,8), y = 8, labels = c("A", "B", "C"))
#text(x = c(1.5,2.5,4.5,5.5,7.5,8.5), y = c(3.5,7,2.5,6.5,1,1.5), labels = c("a", "b", "a", "b", "a", "b"))
#abline(h=0)
dev.off()
interaction.plot(car$Grupo,car$Pigmentos,car$`Chl a`)
anv7 = aov(car$`Chl a`~car$Grupo*car$Pigmentos)
summary(anv7)
shapiro.test(anv7$residuals)
hist(anv7$residuals)
TukeyHSD(anv7)
par(mfrow=c(1,1),cex.axis=1,cex.lab=1.2,las=1,bty= "l", tcl=-0.2,cex=1.2,mar=c(5,6,4,2), pch=16, family="serif")
bargraph.CI(car$Grupo,car$`Chl a`,car$Pigmentos,lc=F,ylab="",xlab="",xaxt="n", ylim=c(0,15),err.width = 0.05)
axis(side=1, at=c(2,5,8), labels=c("","",""))
mtext(c("Chlorophyta","Phaeophyceae","Rhodophyta"),at=c(2,5,8),side=1,line=0.5,cex=1.3)
mtext("ug.g \n Pigmentos", side=2, line=3.4,las=0, cex=1.3)
#mtext("Concentracoes das amostras", side=1, line=2.4,las=0, cex=1.8, family = "serif")
legend(7,13,legend=c("Carotenoides","Clorofila"), col=c("grey40","grey90"), pch=16,cex=1.3,bty = "n")
text(x = c(2,5,8), y = 8, labels = c("A", "B", "C"))
text(x = c(1.5,2.5,4.5,5.5,7.5,8.5), y = c(3.5,7,2.5,6.5,1,1.5), labels = c("a", "b", "a", "b", "a", "b"))
abline(h=0)
lineplot.CI(car$Grupo,car$`Chl a`,car$Pigmentos, type="p", ylab = "",xlab="",xaxt="n", ylim=c(0,10),err.width = 0.05)
axis(side=1, at=c(1,2,3), labels=c("","",""))
mtext(c("Chlorophyta","Phaeophyceae","Rhodophyta"),at=c(1,2,3),side=1,line=0.5,cex=1.3)
mtext("ug.g \n Pigmentos", side=2, line=3.4,las=0, cex=1.3)
dev.off()
par(mfrow=c(1,1),cex.axis=1,cex.lab=1.2,las=1,bty= "l", tcl=-0.2,cex=1.2,mar=c(5,6,4,2), pch=16, family="serif")
lineplot.CI(car$Grupo,car$`Chl a`,car$Pigmentos, type="p", ylab = "",xlab="",xaxt="n", ylim=c(0,10),err.width = 0.05)
axis(side=1, at=c(1,2,3), labels=c("","",""))
mtext(c("Chlorophyta","Phaeophyceae","Rhodophyta"),at=c(1,2,3),side=1,line=0.5,cex=1.3)
mtext("ug.g \n Pigmentos", side=2, line=3.4,las=0, cex=1.3)
##CORONA
rm(list=ls())
setwd("~/Desktop/Corona/dados")
corona <- read.csv("brazil_covid19.csv")
library(tidyverse)
head(corona)
Bconfirmados <- aggregate(corona$cases~corona$date, FUN = sum)
head(Bconfirmados)
#Bconfirmados <- Bconfirmados[-c(0:27),]
colnames(Bconfirmados) <- c("Data", "Casos")
Bmortes <- aggregate(corona$deaths~corona$date, FUN = sum)
#Bmortes <- Bmortes[-c(0:27),]
colnames(Bmortes) <- c("Data", "Mortes")
Bconfirmados$mortes <- Bmortes$Mortes
Casos <- Bconfirmados$Casos
n <-  length(Casos)
teste <- rep(NA,n)
teste[1] <- Casos[1]
for (i in 2:n){
teste[i] <- Casos[i+1]-Casos[i]
}
mortes <- Bconfirmados$mortes
n <-  length(mortes)
mortesnew <- rep(NA,n)
mortesnew[1] <- mortes[1]
for (i in 2:n){
mortesnew[i] <- mortes[i+1]-mortes[i]
}
Bconfirmados$mortesnew <- mortesnew
Bconfirmados$new <-  teste
rotulos <- seq(1:length(Bconfirmados$Casos))
ggplot(data=Bconfirmados, aes(x=Bconfirmados$Data,y=Bconfirmados$new),stat_count(Bconfirmados$new))+geom_col()
s <- ggplot(data=Bconfirmados,aes(x=log(Bconfirmados$Casos+1),y=log(Bconfirmados$new+1)))+geom_point(col="blue")+geom_line(group=1,col="blue")
s <- s + geom_line(aes(y = log(Bconfirmados$mortesnew+1)),col="green", group=1)+geom_point(aes(y=log(Bconfirmados$mortesnew+1)),col="green")
s <- s+labs(x="Casos",y="Novos Casos")
s <- s+theme_linedraw()
#s <- s + scale_y_continuous(sec.axis = sec_axis(~./25, name = "Mortes"))
s <- s + scale_x_discrete(guide = guide_axis(n.dodge = 2))
#s <- s + geom_text(data=Bconfirmados, aes(x=Bconfirmados$Data,y=Bconfirmados$suspeitos, label=Bconfirmados$suspeitos),nudge_y = 500, size=4)
s + geom_abline(slope=0.81, intercept = -0.33, lty=15, col ='red')
lm(log(Bconfirmados$new+1)~log(Bconfirmados$Casos+1))
#s <- s + geom_text(data=Bconfirmados, aes(x=Bconfirmados$Data,y=Bconfirmados$suspeitos, label=Bconfirmados$suspeitos),nudge_y = 500, size=4)
s + geom_abline(slope=0.78, intercept = -0.21, lty=15, col ='red')
lm(log(Bconfirmados$new+1)~log(Bconfirmados$Casos+1))
Bconfirmados$new
b <- ggplot(data=Bconfirmados,aes(x=Data,y=log(Casos)))+geom_point(col="blue")+geom_line(group=1,col="blue")
b <- b + geom_line(aes(y = log(mortes)),col="red", group=1)+geom_point(aes(y=log(mortes)),col="red")
b <- b+labs(x="Data",y="Casos")
b <- b+theme_classic()
#b <- b + scale_y_continuous(sec.axis = sec_axis(~., name = "Mortes"))
b <- b + scale_x_discrete(guide = guide_axis(n.dodge = 1, angle = 90), labels=Bconfirmados$Data)
#b <- b + scale_x_continuous(limits= c(1,length(Bconfirmados$Casos)), breaks = ticks , labels = rotulos)
#b <- b + geom_text(data=Bconfirmados, aes(x=Bconfirmados$Data,y=Bconfirmados$Casos, label=Bconfirmados$Casos),nudge_y = 150,nudge_x = -0.2, size=4)
b + geom_abline(slope=162.5, intercept = -3619, lty=16, col='black')
lm(Bconfirmados$mortes~rotulos)
dias <- 200
126.1*dias-4625
(media= max(Bconfirmados$Casos)/length(Bconfirmados$Casos))
(mediadeaths = max(Bconfirmados$mortes)/(length(Bconfirmados$mortes)-19))
(DLW <- max(Bconfirmados$mortes)-Bconfirmados$mortes[which.max(Bconfirmados$mortes)-7])
(MDia <- max(Bconfirmados$mortes)-Bconfirmados$mortes[which.max(Bconfirmados$mortes)-3])
paranacasos <- subset(corona, subset = (corona$state=='Paraná'))
paranacasos
pconfirmados <- aggregate(paranacasos$cases~paranacasos$date, FUN = sum)
#pconfirmados <- pconfirmados[-c(0:40),]
colnames(pconfirmados) <- c("Data", "Casos")
pmortes <- aggregate(paranacasos$deaths~paranacasos$date, FUN = sum)
#pmortes <- pmortes[-c(0:40),]
colnames(pmortes) <- c("Data", "Mortes")
pconfirmados$mortes <- pmortes$Mortes
head(pconfirmados)
p <- ggplot(data=pconfirmados,aes(x=Data,y=log(Casos)))+geom_point(col="blue")+geom_line(group=1,col="blue")
p <- p + geom_line(aes(y = log(mortes)),col="red", group=1)+geom_point(aes(y=log(mortes)),col="red")
p <- p+labs(x="Data",y="Casos")
p <- p+theme_classic()
#p <- p + scale_y_continuous(sec.axis = sec_axis(~./10, name = "Mortes"))
p <- p + scale_x_discrete(guide = guide_axis(n.dodge = 1, angle = 90),labels=pconfirmados$Data)
#p <- p + geom_text(data=pconfirmados, aes(x=pconfirmados$Data,y=pconfirmados$Casos, label=pconfirmados$Casos),nudge_y = 15, size=4)
p + geom_abline(slope=0, intercept = 6, lty=14)
dfcasos <- subset(corona, subset = (corona$state=='Distrito Federal'))
dfcasos
dfconfirmados <- aggregate(dfcasos$cases~dfcasos$date, FUN = sum)
#dfconfirmados <-dfconfirmados[-c(0:22),]
(colnames(dfconfirmados) <- c("Data", "Casos"))
dfmortes <- aggregate(dfcasos$deaths~dfcasos$date, FUN = sum)
#dfmortes <- dfmortes[-c(0:22),]
colnames(dfmortes) <- c("Data", "Mortes")
dfconfirmados$mortes <- dfmortes$Mortes
head(dfconfirmados)
df <- ggplot(data=dfconfirmados,aes(x=Data,y=log(Casos)))+geom_point(col="blue")+geom_line(group=1,col="blue")
df <- df + geom_line(aes(y = log(mortes)),col="red", group=1)+geom_point(aes(y=log(mortes)),col="red")
df <- df+labs(x="Data",y="Casos")
df <- df+theme_classic()
#df <- df + scale_y_continuous(sec.axis = sec_axis(~./10, name = "Mortes"))
df <- df + scale_x_discrete(guide = guide_axis(n.dodge = 1, angle = 90),labels=dfconfirmados$Data)
#df <- df + geom_text(data=dfconfirmados, aes(x=dfconfirmados$Data,y=dfconfirmados$Casos, label=dfconfirmados$Casos),nudge_y = 2, size=4)
df + geom_abline(slope=0, intercept = 36, lty=14)
spcasos <- subset(corona, subset = (corona$state=='São Paulo'))
spcasos
spconfirmados <- aggregate(spcasos$cases~spcasos$date, FUN = sum)
#spconfirmados <-spconfirmados[-c(0:22),]
(colnames(spconfirmados) <- c("Data", "Casos"))
spmortes <- aggregate(spcasos$deaths~spcasos$date, FUN = sum)
#spmortes <- spmortes[-c(0:22),]
colnames(spmortes) <- c("Data", "Mortes")
spconfirmados$mortes <- spmortes$Mortes
head(spconfirmados)
sp <- ggplot(data=spconfirmados,aes(x=Data,y=log(Casos)))+geom_point(col="blue")+geom_line(group=1,col="blue")
sp <- sp + geom_line(aes(y = log(mortes)),col="red", group=1)+geom_point(aes(y=log(mortes)),col="red")
sp <- sp+labs(x="Data",y="Casos")
sp <- sp+theme_classic()
sp <-# sp + scale_y_continuous(sec.axis = sec_axis(~./10, name = "Mortes"))
sp <- sp + scale_x_discrete(guide = guide_axis(n.dodge = 1, angle = 90),labels=spconfirmados$Data)
sp <- #sp + geom_text(data=spconfirmados, aes(x=spconfirmados$Data,y=spconfirmados$Casos, label=spconfirmados$Casos),nudge_y = 2, size=4)
sp + geom_abline(slope=0, intercept = 36, lty=14)
spasos <- spconfirmados$Casos
n <-  length(spasos)
spnew <- rep(NA,n)
spnew[1] <- spasos[1]
for (i in 2:n){
spnew[i] <- spasos[i+1]-spasos[i]
}
plot(log(spnew+1)~log(spconfirmados$Casos+1), type="b", pch=16)
hist(spasos)
a <- Bconfirmados$mortes[length(Bconfirmados$mortes)]/209000000
round(a*1000000,2)
cities = read.csv("brazil_covid19_cities.csv")
paranagua = subset(cities, subset = (cities$name=='Paranaguá'))
head(paranagua)
pa <- ggplot(data=paranagua,aes(x=date,y=cases))+geom_point(col="blue")+geom_line(group=1,col="blue")
pa <- pa + geom_line(aes(y = deaths),col="red", group=1)+geom_point(aes(y=deaths),col="red")
pa <- pa+labs(x="Data",y="Casos")
pa <- pa+theme_classic()
#pa <- pa + scale_y_continuous(sec.axis = sec_axis(~., name = "Mortes"))
pa <- pa + scale_x_discrete(guide = guide_axis(n.dodge = 1,angle = 90),labels=paranagua$date)
#pa <- pa + geom_text(data=paranagua, aes(x=date,y=cases, label=cases),nudge_y = 1, size=4)
pa + geom_abline(slope=0, intercept = 34, lty=14)
n=10000000
mega <- rep(NA,n)
for (i in 1:n){
mega[i] <- sample(1:60,1)
}
sort(mega, decreasing = T)[1:6]
# Aula 3 - Análises Exploratórias e Gráficos
algas = read.csv("metais_algas.csv", sep = ";", dec = ",")
setwd("~/Documents/GitHub/Introducao-a-linguagem-R")
# Aula 3 - Análises Exploratórias e Gráficos
algas = read.csv("metais_algas.csv", sep = ";", dec = ",")
# Aula 3 - Análises Exploratórias e Gráficos
rm(list=ls())
dev.off()
algas = read.csv("metais_algas.csv", sep = ";", dec = ",")
algas = read.csv("metais_algas.csv", sep = ";", dec = ",")head(algas)
head(algas)
algas = read.csv("metais_algas.csv", sep = ";", dec = ",")
head(algas)
algas_exp = subset(algas,select = c("Especie.e.Genero","Grupo","NS","Estacao","T.C","Salinidade","Cd","Pb","Zn","Cu","Hg","As"))
head(algas_exp)
algas_num = algas_exp[,-c(1:4)]
apply(algas_num,2,mean&sd)
apply(algas_num,2,mean)
apply(algas_num,2,mean)
apply(algas_num,2,sd)
apply(algas_num,2,median)
apply(algas_num,2,max)
apply(algas_num,2,min)
algas_num = algas_exp[,-c(1:4)]
media = apply(algas_num,2,mean)
desvPad = apply(algas_num,2,sd)
mediana= apply(algas_num,2,median)
max = apply(algas_num,2,max)
min = apply(algas_num,2,min)
data.frame(media,desvPad,mediana,max,min)
data.frame(t(media,desvPad,mediana,max,min))
data.frame(media,desvPad,mediana,max,min)
t(data.frame(media,desvPad,mediana,max,min))
t(data.frame(round(media,desvPad,mediana,max,min),2))
t(data.frame(round(c(media,desvPad,mediana,max,min),2)))
t(data.frame(round(media,desvPad,mediana,max,min))
t(data.frame(media,desvPad,mediana,max,min))
t(data.frame(media,desvPad,mediana,max,min))
round(j)
j = t(data.frame(media,desvPad,mediana,max,min))
round(j,2)
dados = t(data.frame(media,desvPad,mediana,max,min))
dados = t(data.frame(media,desvPad,mediana,max,min))
round(dados,2)
algas_As = subset(algas,select = c("Especie.e.Genero","Grupo","NS","Estacao","As"))
hist(algas_As$As)
hist(algas_exp$As)
hist(algas_exp$Cd)
hist(algas_exp$Pb)
hist(algas_exp$Zn)
hist(algas_exp$Cu)
hist(algas_exp$Hg)
hist(algas_exp$As)
algas = read.csv("metais_algas.csv", sep = ";", dec = ",")
lentgh(algas$As)
length(algas$As)
algas$N = rnorm(82,12,3)
algas_exp = subset(algas,select = c("Especie.e.Genero","Grupo","NS","Estacao","T.C","Salinidade","Cd","Pb","Zn","Cu","Hg","As","N"))
head(algas_exp)
algas_num = algas_exp[,-c(1:4)]
media = apply(algas_num,2,mean)
desvPad = apply(algas_num,2,sd)
mediana= apply(algas_num,2,median)
max = apply(algas_num,2,max)
min = apply(algas_num,2,min)
data.frame(media,desvPad,mediana,max,min)
dados = t(data.frame(media,desvPad,mediana,max,min))
round(dados,2)
algas_N = subset(algas,select = c("Especie.e.Genero","Grupo","NS","Estacao","N"))
hist(algas_N$N)
boxplot(algas_N$N~algas_N$Estacao)
dados = t(data.frame(media,desvPad,mediana,max,min))
dados
dados$N
boxplot(algas_N$N~algas_N$Estacao)
qqnorm(algas_N$N)
qqline(algas_N$N)
boxplot(algas_N$N)
#Separado
As = aggregate(algas_N$N~algas_N$Especie.e.Genero+algas$Grupo, mean)
#Separado
aggregate(algas_N$N~algas_N$Especie.e.Genero+algas$Grupo, mean)
#Separado
aggregate(algas_N$N~algas_N$Especie.e.Genero+algas$Grupo, FUN = mean)
#Separado
aggregate(algas_N$N~algas_N$Estacao+algas$Grupo, FUN = mean)
boxplot(algas_exp$As~algas_exp$Estacao+algas_exp$Grupo)
boxplot(algas_exp$N~algas_exp$Estacao+algas_exp$Grupo)
hist(algas_exp$N)
boxplot(algas_exp$N)
qqnorm(algas_exp$N)
qqline(algas_exp$N)
#Separado
aggregate(algas_N$N~algas_N$Estacao+algas$Grupo, FUN = mean)
boxplot(algas_exp$N~algas_exp$Estacao+algas_exp$Grupo)
qqnorm(algas_exp$N[algas_exp$Grupo == 'Phaeophyceae'])
qqline(algas_exp$N[algas_exp$Grupo == 'Phaeophyceae'])
# Gráficos
boxplot(algas_exp$N~algas_exp$Estacao+algas_exp$Grupo)
library(sciplot)
bargraph.CI(algas_exp$Estacao, algas_exp$N, algas_exp$Grupo)
bargraph.CI(algas_exp$Estacao, algas_exp$N, algas_exp$Grupo, ylim = c(0,20))
bargraph.CI(algas_exp$Estacao, algas_exp$N, algas_exp$Grupo, ylim = c(0,20), ylab = "Concentracao")
bargraph.CI(algas_exp$Estacao, algas_exp$N, algas_exp$Grupo, ylim = c(0,20), ylab = "Concentracao", xlab = "Estacao")
table(algas$Grupo)
barras = table(algas$Grupo+algas$Estacao)
barras = table(algas$Grupo)
barplot(barras)
lineplot(barras)
plot(barras)
plot(barras, type = "b")
plot(barras, type = "l")
plot(barras, type = "p")
plot(barras, type = "p", pch = 16)
filmes = URL(Filmes_MovieLens_dataset/ratings.csv)
filmes = url(Filmes_MovieLens_dataset/ratings.csv)
url(https://raw.githubusercontent.com/mcristinee/Aulas-Alura-Quarentenadados/master/Filmes_MovieLens_dataset/ratings.csv)
url("https://raw.githubusercontent.com/mcristinee/Aulas-Alura-Quarentenadados/master/Filmes_MovieLens_dataset/ratings.csv")
filmes = read.csv("./MovieLens/movies.csv")
filmes
notas = read.csv("./MovieLens/ratings.csv")
notas
head(notas)
head(filmes)
cbind(filmes,notas)
filmes = read.csv("./MovieLens/movies.csv")
filmes
notas = read.csv("./MovieLens/ratings.csv")
notas
head(notas)
head(filmes)
left_join(filmes,notas, by = filmes$"movieId")
left_join(filmes,notas, by = "movieId")
juntos = left_join(filmes,notas, by = "movieId")
head(juntos)
aggregate(juntos$rating~juntos$movieId[juntos$movieId==1])
aggregate(juntos$rating~juntos$movieId[juntos$movieId==1], FUN = mean)
aggregate(juntos$rating~juntos$movieId==1, FUN = mean)
sub = subset(juntos, subset = juntos$movieId == c(1:10))
sub = subset(juntos, subset = juntos$movieId == c(1:))
barplot(barras)
plot(algas_exp$Grupo, type = "p", pch = 16)
plot(algas_exp$N, type = "p", pch = 16)
barplot(algas_exp$N)
barplot(algas_exp$N~algas_exp$Grupo)
barplot(algas_exp$N,algas_exp$Grupo)
plot(algas_exp$N, type = "p", pch = 16)
plot(algas_exp$N~algas_exp$Especie.e.Genero, type = "p", pch = 16)
plot(algas_exp$N~algas_exp$Hg, type = "p", pch = 16)
plot(algas_exp$N~algas_exp$As, type = "p", pch = 16)
table(algas_exp$Grupo)
table(algas_exp$Especie.e.Genero)
table(algas_exp$NS)
table(algas_exp$Estacao)
plot(table(algas_exp$Grupo))
barplot(table(algas_exp$Grupo))
barplot(table(algas_exp$NS))
barplot(table(algas_exp$Estacao))
barplot(table(algas_exp$Estacao))
Estacao= table(algas_exp$Estacao)
barplot(Estacao)
barplot(Estacao,Grupo)
Grupo = table(algas_exp$Grupo)
barplot(Estacao,Grupo)
barplot(Estacao~Grupo)
barplot(Grupo)
Estacao= table(algas_exp$Estacao)
barplot(Grupo)
plot(SP)
SP = table(algas_exp$Especie.e.Genero)
NS = table(algas_exp$NS)
Estacao= table(algas_exp$Estacao)
barplot(Grupo)
plot(SP)
lineplot(SP)
plot(SP, type = "p")
plot(SP, type = "p", pch = 15)
